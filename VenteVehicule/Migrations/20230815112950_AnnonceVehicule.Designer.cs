// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using VenteVehicule.Models;

#nullable disable

namespace VenteVehicule.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20230815112950_AnnonceVehicule")]
    partial class AnnonceVehicule
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("VenteVehicule.Models.Annonce", b =>
                {
                    b.Property<int>("Id_annance")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id_annance"));

                    b.Property<DateTime>("DateMiseEnLigne")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumeroTelephone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Prix")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("Vendeur")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("id_Vehicule")
                        .HasColumnType("int");

                    b.HasKey("Id_annance");

                    b.HasIndex("id_Vehicule");

                    b.ToTable("Annonces");
                });

            modelBuilder.Entity("VenteVehicule.Models.VehiculeDoccasion", b =>
                {
                    b.Property<int>("Id_vehicule")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id_vehicule"));

                    b.Property<int>("AnneFab")
                        .HasColumnType("int");

                    b.Property<string>("Carburant")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Couleur")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateMiseEnVente")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Kilometrage")
                        .HasColumnType("int");

                    b.Property<string>("Marque")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Modele")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Prix")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("Transmission")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id_vehicule");

                    b.ToTable("VehiculeDoccasions");
                });

            modelBuilder.Entity("VenteVehicule.Models.Annonce", b =>
                {
                    b.HasOne("VenteVehicule.Models.VehiculeDoccasion", "VehiculeDoccasion")
                        .WithMany()
                        .HasForeignKey("id_Vehicule")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("VehiculeDoccasion");
                });
#pragma warning restore 612, 618
        }
    }
}
